@using LicentaApp.Domain
@using LicentaApp.Domain.ValueObjects
@model LicentaApp.ViewModels.ComandaViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout" +
             ".cshtml";
}


@using (Html.BeginForm("VerificareComanda", "Comenzi", FormMethod.Get, new { @autocomplete = "off" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col s8">
            <h4>Creaza comanda</h4>
        </div>
        <div class="col s4">
            <div style="margin-top: 20px">
                @Html.DropDownListFor(model => model.TipComanda, typeof(TipComanda).ToSelectList(), "- Tip Comanda -", new { @id = "tip-comanda-options" })
                @Html.LabelFor(model => model.TipComanda)
            </div>
        </div>
    </div>
    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="card-panel">
        @Html.Partial("Comenzi/Client", this.Model)
    </div>
    <div id="comanda-container">
        @if (Model?.TipComanda != null)
        {
            if (this.Model.TipComanda == TipComanda.ComandaCuPrelucrare)
            {
                @Html.Partial("Comenzi/ComandaCuPrelucrare")
            }
            else if (this.Model.TipComanda == TipComanda.ComandaSimpla)
            {
                @Html.Partial("Comenzi/ComandaSimpla")
            }
        }

    </div>

    <div id="btn-submit">
        <input type="submit" value="Verificare Comanda" class="btn" />
    </div>
}

@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script>
        @if (ViewData.ContainsKey(AppConstants.TelefonClienti))
        {
            <text>
        var telefonArray = @Html.Raw(Json.Encode(ViewData[AppConstants.TelefonClienti]));
        </text>
        }
        @if (ViewData.ContainsKey(AppConstants.CodRame))
        {
            <text>
        var codRameArray = @Html.Raw(Json.Encode(ViewData[AppConstants.CodRame]));
        </text>
        }
        @if (ViewData.ContainsKey(AppConstants.CodRameSiOchelariSoare))
        {
            <text>
        var codRameSiOchelariArray = @Html.Raw(Json.Encode(ViewData[AppConstants.CodRameSiOchelariSoare]));
        </text>
        }

        @if (Model?.TipComanda == null)
        {
            <text>
        $("#btn-submit").hide();
        $("#lentile-card").hide();
        </text>
        }

        var sfereIds = [];
        var tipLentila;
        var indiceRefractie;
        var idProducator;
        var idProdus;
        var tipComanda;
        var afiseazaRame;

        $(document).ready(function() {
            reloadEvents();

            $('#tip-comanda-options').change(function() {
                tipComanda = $(this).val();
                var containerId = '#comanda-container';
                var url = '@Url.Action("GetComandaDupaTip", "Comenzi", null)?tipComanda=' + tipComanda;

                loadStepOnItemChange(containerId, url, [sferaChange, initCodProdusAutocomplete], $(this));
            });
            loadAutocomplete('input#cauta-client-input.autocomplete', telefonArray);

        });


        function initCodProdusAutocomplete() {
            $("#btn-submit").show();
            switch (tipComanda) {
                case "1":
                    loadAutocomplete('input#cod-produs-simplu.autocomplete', codRameSiOchelariArray);
                    break;
                case "2":
                    loadAutocomplete('input#cod-produs-simplu.autocomplete', codRameArray);
                    if (!afiseazaRame) {
                        $('#rame-container').hide();
                    }
                    toggleRame();
                    break;
                default:
                    $("#btn-submit").hide();

            }
        }


        function sferaChange() {
            $('.sfera').change(function(e) {
                addOrRemove(sfereIds, $(this).val(), e.target.id);
                var containerId = '#tip-lentila-options-container';
                var urlPramas = getTipLentilaOptionsUrlParams();
                var url = '@Url.Action("GetTipLentilaOptions", "Comenzi", null)' + urlPramas;
                var conditionToDisplay = sfereIds.length > 0 ? true : undefined;
                loadStepOnItemChange(containerId,
                    url,
                    [tipLentilaChange, displayLentileCard],
                    $(this),
                    conditionToDisplay);
            });
        }

        function displayLentileCard() {
            $("#lentile-card").show();
        }

        function tipLentilaChange() {
            $('#tip-lentila-options').change(function() {
                tipLentila = $(this).val();
                var containerId = '#indice-refractie-options-container';
                var url = '@Url.Action("GetIndiceRefractieOptions", "Comenzi", null)?tipLentila=' + tipLentila;
                loadStepOnItemChange(containerId, url, [indiceRefractieChange], $(this));
            });
        }

        function indiceRefractieChange() {
            $('#indice-refractie-options').change(function() {
                indiceRefractie = $(this).val();
                var containerId = '#producator-options-container';
                var url = '@Url.Action("GetProducatorOptions", "Comenzi", null)?tipLentila=' +
                    tipLentila +
                    '&indiceRefractie=' +
                    indiceRefractie;
                loadStepOnItemChange(containerId, url, [producatorChange], $(this));
            });
        }

        function producatorChange() {
            $('#producator-options').change(function() {
                idProducator = $(this).val();
                var containerId = '#lentila-options-container';
                var url = '@Url.Action("GetLentilaOptions", "Comenzi", null)?tipLentila=' +
                    tipLentila +
                    '&indiceRefractie=' +
                    indiceRefractie +
                    '&idProducator=' +
                    idProducator;
                loadStepOnItemChange(containerId, url, [lentilaChange], $(this));
            });
        }

        function lentilaChange() {
            $('#lentila-options').change(function() {
                idProdus = $(this).val();
                var containerId = '#extra-options-container';
                var url = '@Url.Action("GetLentileExtraOptions", "Comenzi", null)';
                loadStepOnItemChange(containerId, url, null, $(this));
            });
        }


        function toggleRame() {
            $("#adauga-rame").click(function() {
                if ($('#rame-container').is(':visible')) {
                    $("#rame-container").hide();
                } else {
                    $("#rame-container").show();
                }
            });
        }

        function doarLentilaProgresiva() {
            var isAproape = anyContains(sfereIds, "Aproape");
            var isDistanta = anyContains(sfereIds, "Distanta");

            if (isAproape && isDistanta) {
                return true;
            }
            return false;
        }

        function getTipLentilaOptionsUrlParams() {
            if (sfereIds.length > 0) {
                var result = "?ids=" + sfereIds[0];
                for (var i = 1; i < sfereIds.length; ++i) {
                    result += ("&ids=" + sfereIds[i]);
                }
                return result;
            } else {
                return "";
            }
        }


        $('#adauga-client-btn').click(function() {
            var numarTelefon = $('#cauta-client-input').val();
            if (numarTelefon && telefonArray.indexOf(numarTelefon) >= 0) {
                $('#client-container').load('@Url.Action("GetClient", "Comenzi", null)' +
                    '?numarTelefon=' +
                    numarTelefon,
                    function() {
                        initCalendar();
                        $('#client-editor-section').find('label').each(function() {
                            $(this).addClass('active');
                        });
                    });
            }
        });

        function reloadEvents() {
            @{
                if (this.Model?.CodProdusRO.IsNullOrEmpty() == false)
                {
                    <text>
            afiseazaRame = true;
            </text>
                }


                if (this.Model?.TipComanda != null)
                {
                    <text>
            tipComanda = "@Html.Raw((int)this.Model.TipComanda)";
            sferaChange();
            initCodProdusAutocomplete();
            </text>
                }

                if (ViewData.ContainsKey(AppConstants.TipLentilaOptions))
                {
                    {
                        <text>
            tipLentilaChange();
            displayLentileCard();
            </text>
                    }
                    if (ViewData.ContainsKey(AppConstants.IndiceReractieOptions))
                    {
                        <text>
            indiceRefractieChange();
            </text>
                    }
                    if (ViewData.ContainsKey(AppConstants.ProducatorOptions))
                    {
                        <text>
            producatorChange();
            </text>
                    }
                    if (ViewData.ContainsKey(AppConstants.LentilaOptions))
                    {
                        <text>
            lentilaChange();
            </text>
                    }
                }


            }

        }
    </script>
}
